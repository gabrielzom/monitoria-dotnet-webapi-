// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace monitoria_dotnet_webapi.Migrations
{
    [DbContext(typeof(ContextoBancoDeDados))]
    [Migration("20221031035912_PrimeiraMigracaoCriadoPor")]
    partial class PrimeiraMigracaoCriadoPor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BancoDados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<string>("Conexao")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("conexao");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<string>("Dialeto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("dialeto");

                    b.Property<string>("Versao")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("versao");

                    b.HasKey("Id")
                        .HasName("PK_tab_bancodados");

                    b.ToTable("tab_bancodados", (string)null);
                });

            modelBuilder.Entity("Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("descricao");

                    b.HasKey("Id")
                        .HasName("pk_tab_generos");

                    b.ToTable("tab_generos", (string)null);
                });

            modelBuilder.Entity("Jogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<bool?>("Desenvolvedor")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("desenvolvedor");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("email");

                    b.Property<bool?>("Gerente")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("gerente");

                    b.Property<bool?>("Moderador")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("moderador");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("DATETIME")
                        .HasColumnName("nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nome");

                    b.Property<int>("PermissaoId")
                        .HasColumnType("int")
                        .HasColumnName("permissao_id");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("varchar(512)")
                        .HasColumnName("senha");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("sobrenome");

                    b.Property<bool?>("Suporte")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("suporte");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("usuario");

                    b.HasKey("Id")
                        .HasName("PK_tab_jogadores");

                    b.HasIndex("PermissaoId");

                    b.ToTable("tab_jogadores", (string)null);
                });

            modelBuilder.Entity("Jogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<int>("FaixaEtaria")
                        .HasColumnType("int")
                        .HasColumnName("faixa_etaria");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int")
                        .HasColumnName("genero_id");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("titulo");

                    b.Property<decimal>("Valor")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id")
                        .HasName("PK_tab_jogos");

                    b.HasIndex("GeneroId");

                    b.ToTable("tab_jogos", (string)null);
                });

            modelBuilder.Entity("Permissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<string>("Nivel")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nivel");

                    b.HasKey("Id")
                        .HasName("pk_tab_permissoes");

                    b.ToTable("tab_permissoes", (string)null);
                });

            modelBuilder.Entity("Sala", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<DateTime?>("FechadaEm")
                        .IsRequired()
                        .HasColumnType("DATETIME")
                        .HasColumnName("fechada_em");

                    b.Property<int>("JogoId")
                        .HasColumnType("int")
                        .HasColumnName("jogo_id");

                    b.Property<int>("ServidorId")
                        .HasColumnType("int")
                        .HasColumnName("servidor_id");

                    b.HasKey("Id")
                        .HasName("PK_tab_salas");

                    b.HasIndex("JogoId");

                    b.HasIndex("ServidorId");

                    b.ToTable("tab_salas", (string)null);
                });

            modelBuilder.Entity("SalaJogador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<int>("JogadorId")
                        .HasColumnType("int")
                        .HasColumnName("jogador_id");

                    b.Property<int>("SalaId")
                        .HasColumnType("int")
                        .HasColumnName("sala_id");

                    b.HasKey("Id")
                        .HasName("PK_tab_salajogadores");

                    b.HasIndex("JogadorId");

                    b.HasIndex("SalaId");

                    b.ToTable("tab_salajogadores", (string)null);
                });

            modelBuilder.Entity("Servidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime?>("AtualizadoEm")
                        .HasColumnType("DATETIME")
                        .HasColumnName("atualizado_em");

                    b.Property<string>("AtualizadoPor")
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("atualizado_por");

                    b.Property<int>("BancoDadosId")
                        .HasColumnType("int")
                        .HasColumnName("banco_dados_id");

                    b.Property<DateTime>("CriadoEm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("criado_em")
                        .HasDefaultValueSql("NOW()");

                    b.Property<string>("CriadoPor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("VARCHAR(80)")
                        .HasColumnName("criado_por")
                        .HasDefaultValueSql("'admin@master'");

                    b.Property<string>("IpPrivado")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ip_privado");

                    b.Property<string>("IpPublico")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("ip_publico");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nome");

                    b.Property<string>("Regiao")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("regiao");

                    b.Property<string>("SistemaOperacional")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("sistema_operacional");

                    b.HasKey("Id")
                        .HasName("PK_tab_servidores");

                    b.HasIndex("BancoDadosId");

                    b.ToTable("tab_servidores", (string)null);
                });

            modelBuilder.Entity("Jogador", b =>
                {
                    b.HasOne("Permissao", "Permissao")
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permissao");
                });

            modelBuilder.Entity("Jogo", b =>
                {
                    b.HasOne("Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("Sala", b =>
                {
                    b.HasOne("Jogo", "Jogo")
                        .WithMany()
                        .HasForeignKey("JogoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Servidor", "Servidor")
                        .WithMany()
                        .HasForeignKey("ServidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jogo");

                    b.Navigation("Servidor");
                });

            modelBuilder.Entity("SalaJogador", b =>
                {
                    b.HasOne("Jogador", null)
                        .WithMany()
                        .HasForeignKey("JogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Sala", null)
                        .WithMany()
                        .HasForeignKey("SalaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Servidor", b =>
                {
                    b.HasOne("BancoDados", "BancoDados")
                        .WithMany()
                        .HasForeignKey("BancoDadosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BancoDados");
                });
#pragma warning restore 612, 618
        }
    }
}
